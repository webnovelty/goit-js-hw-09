{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAsBC,SAASC,cAAc,UAC7CC,EAAOF,SAASC,cAAc,QAC9BE,EAAW,GAEjBD,EAAKE,iBAAiB,SACtB,SAAqBC,GACpBF,EAASE,EAAEC,OAAOC,MAAQC,OAAOH,EAAEC,OAAOG,UAG3CV,EAAoBK,iBAAiB,SACrC,SAAyBC,GAExB,IADAA,EAAEK,iBACGC,EAAI,EAAGA,EAAIR,EAAiB,OAAGQ,GAAK,EACxCC,EAAcD,EAAI,EAAGR,EAAgB,OACnCU,MAAKC,GAAUC,EAAAlB,GAASmB,OAAOC,QAAQH,KACvCI,OAAMC,GAASJ,EAAAlB,GAASmB,OAAOI,QAAQD,KACzChB,EAAgB,OAAKA,EAAe,QAQtC,MAAMS,EAAgB,CAACS,EAAUC,IAGzB,IAAIC,SAAQ,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAENH,GACHF,EAAQ,uBAAqBH,QAAiBC,OAE7CG,EAAK,sBAAoBJ,QAAeC,SAExCA","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\nconst buttonCreatePromise = document.querySelector('button');\nconst form = document.querySelector('form');\nconst formData = {};\n\nform.addEventListener('input', addDataForm);\nfunction addDataForm(e) {\n\tformData[e.target.name] = Number(e.target.value);\n}\n\nbuttonCreatePromise.addEventListener('click', onSubmitPromise);\nfunction onSubmitPromise(e) {\n\te.preventDefault();\n\tfor (i = 0; i < formData['amount']; i += 1) {\n\t\tcreatePromise(i + 1, formData['delay'])\n\t\t\t.then(result => Notiflix.Notify.success(result))\n\t\t\t.catch(error => Notiflix.Notify.failure(error));\n\t\tformData['delay'] += formData['step'];\n\n\t}\n\n\n}\n\n\nconst createPromise = (position, delay) => {\n\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst shouldResolve = Math.random() > 0.3;\n\t\tsetTimeout(() => {\n\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\t}\n\t\t\treject(`❌ Rejected promise ${position} in ${delay}ms`);\n\n\t\t}, delay);\n\n\t});\n\n\n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$buttonCreatePromise","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$formData","addEventListener","e","target","name","Number","value","preventDefault","i","$47d4ff9957288465$var$createPromise","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.d98b0e2a.js.map"}